name: Main

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    strategy:
      matrix:
        python-version: [3.8.5]
        os: [ubuntu-latest]
        
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      # See https://github.com/python-poetry/poetry/issues/3412
      run: |
        python -m pip install poetry
        env LC_ALL=C.UTF-8 LANG=C.UTF-8 LANGUAGE=C.UTF-8 poetry install --no-root
    - uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: poetry-${{ runner.os }}-${{ hashFiles('poetry.lock') }}-v1

    - name: Black
      run: |
        poetry run black --check --diff .
        
    #- name: Pylint
    # run: |
    #   find . -type f -name "*.py" | xargs poetry run pylint
  test:
    strategy:
      matrix:
        python-version: [3.8.5]
        os: [ubuntu-latest]
        
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      # See https://github.com/python-poetry/poetry/issues/3412
      run: |
        python -m pip install poetry
        env LC_ALL=C.UTF-8 LANG=C.UTF-8 LANGUAGE=C.UTF-8 poetry install --no-root
    - uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: poetry-${{ runner.os }}-${{ hashFiles('poetry.lock') }}-v1

    - name: Pytest
      run: |
        export PYTHONPATH=$(pwd)
        poetry run pytest --verbose tests -m "not results"
